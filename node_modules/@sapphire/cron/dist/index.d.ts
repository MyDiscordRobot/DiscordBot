declare enum Time {
    Millisecond = 1,
    Second = 1000,
    Minute = 60000,
    Hour = 3600000,
    Day = 86400000,
    Month = 2628000000,
    Year = 31536000000
}
declare const partRegex: RegExp;
declare const wildcardRegex: RegExp;
declare const allowedNum: number[][];
declare const predefined: {
    readonly '@annually': "0 0 1 1 *";
    readonly '@yearly': "0 0 1 1 *";
    readonly '@monthly': "0 0 1 * *";
    readonly '@weekly': "0 0 * * 0";
    readonly '@daily': "0 0 * * *";
    readonly '@hourly': "0 * * * *";
};
declare const cronTokens: {
    readonly jan: 1;
    readonly feb: 2;
    readonly mar: 3;
    readonly apr: 4;
    readonly may: 5;
    readonly jun: 6;
    readonly jul: 7;
    readonly aug: 8;
    readonly sep: 9;
    readonly oct: 10;
    readonly nov: 11;
    readonly dec: 12;
    readonly sun: 0;
    readonly mon: 1;
    readonly tue: 2;
    readonly wed: 3;
    readonly thu: 4;
    readonly fri: 5;
    readonly sat: 6;
};
declare const tokensRegex: RegExp;

/**
 * Handles Cron strings and generates dates based on the cron string provided.
 * @see https://en.wikipedia.org/wiki/Cron
 */
declare class Cron {
    cron: string;
    normalized: string;
    minutes: number[];
    hours: number[];
    days: number[];
    months: number[];
    dows: number[];
    /**
     * @param cron The cron pattern to use
     */
    constructor(cron: string);
    /**
     * Get the next date that matches with the current pattern
     * @param outset The Date instance to compare with
     * @param origin Whether this next call is origin
     */
    next(outset?: Date, origin?: boolean): Date;
    /**
     * Normalize the pattern
     * @param cron The pattern to normalize
     */
    private static normalize;
    /**
     * Parse the pattern
     * @param cron The pattern to parse
     */
    private static parseString;
    /**
     * Parse the current part
     * @param cronPart The part of the pattern to parse
     * @param id The id that identifies the current part
     */
    private static parsePart;
}

export { Cron, Time, allowedNum, cronTokens, partRegex, predefined, tokensRegex, wildcardRegex };
